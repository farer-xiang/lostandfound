<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lostandfound.dao.LostMapper" >
  <resultMap id="BaseResultMap" type="com.lostandfound.model.Lost" >
    <id column="lid" property="lid" jdbcType="INTEGER" />
    <result column="luid" property="luid" jdbcType="VARCHAR" />
    <result column="limg" property="limg" jdbcType="VARCHAR" />
    <result column="lname" property="lname" jdbcType="VARCHAR" />
    <result column="lstatus" property="lstatus" jdbcType="VARCHAR" />
    <result column="ldate" property="ldate" jdbcType="DATE" />
    <result column="lpos" property="lpos" jdbcType="VARCHAR" />
    <result column="ltid" property="ltid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    lid, luid, limg, lname, lstatus, ldate, lpos, ltid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lost
    where lid = #{lid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lost
    where lid = #{lid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lostandfound.model.Lost" >
    insert into lost (lid, luid, limg, 
      lname, lstatus, ldate, 
      lpos, ltid)
    values (#{lid,jdbcType=INTEGER}, #{luid,jdbcType=VARCHAR}, #{limg,jdbcType=VARCHAR}, 
      #{lname,jdbcType=VARCHAR}, #{lstatus,jdbcType=VARCHAR}, #{ldate,jdbcType=DATE}, 
      #{lpos,jdbcType=VARCHAR}, #{ltid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lostandfound.model.Lost" >
    insert into lost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lid != null" >
        lid,
      </if>
      <if test="luid != null" >
        luid,
      </if>
      <if test="limg != null" >
        limg,
      </if>
      <if test="lname != null" >
        lname,
      </if>
      <if test="lstatus != null" >
        lstatus,
      </if>
      <if test="ldate != null" >
        ldate,
      </if>
      <if test="lpos != null" >
        lpos,
      </if>
      <if test="ltid != null" >
        ltid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lid != null" >
        #{lid,jdbcType=INTEGER},
      </if>
      <if test="luid != null" >
        #{luid,jdbcType=VARCHAR},
      </if>
      <if test="limg != null" >
        #{limg,jdbcType=VARCHAR},
      </if>
      <if test="lname != null" >
        #{lname,jdbcType=VARCHAR},
      </if>
      <if test="lstatus != null" >
        #{lstatus,jdbcType=VARCHAR},
      </if>
      <if test="ldate != null" >
        #{ldate,jdbcType=DATE},
      </if>
      <if test="lpos != null" >
        #{lpos,jdbcType=VARCHAR},
      </if>
      <if test="ltid != null" >
        #{ltid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lostandfound.model.Lost" >
    update lost
    <set >
      <if test="luid != null" >
        luid = #{luid,jdbcType=VARCHAR},
      </if>
      <if test="limg != null" >
        limg = #{limg,jdbcType=VARCHAR},
      </if>
      <if test="lname != null" >
        lname = #{lname,jdbcType=VARCHAR},
      </if>
      <if test="lstatus != null" >
        lstatus = #{lstatus,jdbcType=VARCHAR},
      </if>
      <if test="ldate != null" >
        ldate = #{ldate,jdbcType=DATE},
      </if>
      <if test="lpos != null" >
        lpos = #{lpos,jdbcType=VARCHAR},
      </if>
      <if test="ltid != null" >
        ltid = #{ltid,jdbcType=INTEGER},
      </if>
    </set>
    where lid = #{lid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lostandfound.model.Lost" >
    update lost
    set luid = #{luid,jdbcType=VARCHAR},
      limg = #{limg,jdbcType=VARCHAR},
      lname = #{lname,jdbcType=VARCHAR},
      lstatus = #{lstatus,jdbcType=VARCHAR},
      ldate = #{ldate,jdbcType=DATE},
      lpos = #{lpos,jdbcType=VARCHAR},
      ltid = #{ltid,jdbcType=INTEGER}
    where lid = #{lid,jdbcType=INTEGER}
  </update>
  
  <select id="getAll" resultMap="BaseResultMap" parameterType="java.lang.String">
    select *
    from lost
    where lstatus = 0
  </select>
  <select id="selectByPage" resultMap = "BaseResultMap">
  select * 
  from lost 
  where lstatus = 0
  order by lid desc limit #{from,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>
  <select id="admingetAll" resultMap="BaseResultMap" parameterType="java.lang.String">
    select *
    from lost
  </select>
  <select id="adminselectByPage" resultMap = "BaseResultMap">
  select * 
  from lost 
  order by lid desc limit #{from,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>
  
  <select id="getAllSelective" resultMap="BaseResultMap" parameterType="java.lang.String">
    select *
    from lost
    where lstatus = 0
    <if test="record != null and record != ''">
       AND lname LIKE "%"#{record}"%"
   </if>
  </select>
  <select id="selectByPageSelective" resultMap = "BaseResultMap">
  select * 
  from lost 
  where lstatus = 0
   <if test="record != null and record != ''">
       AND lname LIKE "%"#{record}"%"
   </if>
  order by lid desc limit #{from,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>
  
  <select id="getAllById" resultMap="BaseResultMap" parameterType="java.lang.String">
    select *
    from lost
    where luid = #{luid,jdbcType=VARCHAR}
    AND lstatus = 0
  </select>
  <select id="selectByPageById" resultMap = "BaseResultMap">
  select * 
  from lost 
  where luid = #{luid,jdbcType=VARCHAR}
  AND lstatus = 0
  order by lid desc limit #{from,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>
  
  <select id="getAllByType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select *
    from lost
    where ltid = #{ltid,jdbcType=INTEGER}
    AND lstatus = 0
  </select>
  <select id="selectByPageByType" resultMap = "BaseResultMap" >
  select * 
  from lost 
  where ltid = #{ltid,jdbcType=INTEGER}
  AND lstatus = 0
  order by lid desc limit #{from,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>
  <select id="admingetAllByType" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select *
    from lost
    where ltid = #{ltid,jdbcType=INTEGER}
  </select>
  <select id="adminselectByPageByType" resultMap = "BaseResultMap" >
  select * 
  from lost 
  where ltid = #{ltid,jdbcType=INTEGER}
  order by lid desc limit #{from,jdbcType=INTEGER},#{count,jdbcType=INTEGER}
  </select>
  
  <select id="selectTOP6" resultMap = "BaseResultMap">
  select * 
  from lost 
  where lstatus = 0
  order by lid desc limit 6
  </select>
</mapper>